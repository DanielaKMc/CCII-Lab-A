//1. Defina una Pila que permita insertar elementos utilizando clases.


//2. Sobre el ejercicio anterior, adecue el programa para eliminar elementos de una Pila.


//3. Implemente un algoritmo para buscar elementos de la Pila.


//4. Escribir un programa que dé la solución al problema de las Torres de Hanoi para N discos, utilizando pilas, las cuales representan cada uno de los postes.

#include "stdio.h"
#include "stdlib.h"

#define TAMPILA 10

struct pila{
	int item[TAMPILA];
	int tope;
};
typedef struct pila tdP;

int push(tdP& p, int e);
int pop(tdP& p, int& e);
int stacktop(tdP p, int& e);
int empty(tdP p);
void strP(tdP& p);

void hanoi(int n, tdP& A, tdP& B, tdP& C,
	tdP* a, tdP* b, tdP* c);
void show(tdP C);

int main(){
	int n;
	tdP A, B, C;
	strP(A);
	strP(B);
	strP(C);

	tdP* a=&A;
	tdP* b=&B;
	tdP* c=&C;

	printf("\nIndique la cantidad de discos: ");
	scanf("%d",&n);

	printf("\nSe iniciará la Torre A con discos del 1 al %d",n);
	
	for(int i=n; i>0; i--)
		push(A,i);

	printf("\nLos discos de la Torre A son: ");
	show(A);
	printf("\n------------------------------------------------");

	hanoi(n, A, B, C, a, b, c);

	printf("\n------------------------------------------------");
	printf("\nLos discos de la Torre C son: ");
	show(C);

	return 0;
}

int push(tdP& p, int e){
	if(p.tope==TAMPILA-1)
		return 0;
	p.item[++p.tope]=e;
	return 1;
}

int pop(tdP& p, int& e){
	if(empty(p))
		return 0;
	e=p.item[p.tope--];
	return 1;
}

int stacktop(tdP p, int& e){
	if (empty(p))
		return 0;
	e=p.item[p.tope];
	return 1;
}

int empty(tdP p){
	if(p.tope==-1)
		return 1;
	return 0;
}

void strP(tdP& p){
	p.tope=-1;
}

void hanoi(int n, tdP& A, tdP& B, tdP& C, tdP* a, tdP* b, tdP* c){
	int e;
	char aux,aux1;

	if(a==&A)
		aux='A';
	else if(b==&A)
		aux='B';
	else if(c==&A)
		aux='C';

	if(a==&C)
		aux1='A';
	else if(b==&C)
		aux1='B';
	else if(c==&C)
		aux1='C';

	if(n==1){
		pop(A,e);
		push(C,e);
		printf("\nEl disco %d fue movido de la torre %c a la torre %c",n,aux,aux1);
    }
	
	else{
		hanoi(n-1,A,C,B,a,b,c);
		pop(A,e);
		push(C,e);
		printf("\nEl disco %d fue movido de la torre %c a la torre %c",n,aux,aux1);
		hanoi(n-1,B,A,C,a,b,c);
	}
}

void show(tdP C){
	int e;
	while (pop(C,e))
		printf("%d",e);
}
