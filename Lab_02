//1. Sumar todos los enteros pares desde 2 hasta 100.

int main(){
        int suma = 0;
     
        for( int i = 1; i <= 100; i++ ){
            if( i % 2 == 0 ) suma += i;
        }
     
        std::cout << "\nLa suma de los n칰meros pares del 1 al 100 es: " << suma << std::endl;
     
        return 0;
    }


//2. Calcule los primeros 50 n칰meros primos y muestre el resultado en pantalla.

main(){
      prime(P);
    }
    
    int prime(int p){
      int count, i, flag, sr;
      int n=1;
      count=1;
      
      while(count<=p){
        sr=sqrt(n); 
        flag=0;
        
        for(i=2; i<=sr; i++){
          if(n%i==0){
            flag=1;
            break;
          }
        }
    
        if(flag==0){
          printf("%d \n", n);
          count++;
        }
        
        n++;
      } 
    }


//3. Escribir un programa que visualice en pantalla los n칰meros m칰ltiplos de 5 comprendidos entre 1 y 100.

#include <iostream>
#include <stdlib.h>

using namespace std;

int main(){
    cout<<"Los n칰meros m칰ltiplos de 5 comprendidos entre 1 y 100 son:"<<endl;
    for(int i=1; i<=100; i++){
        if(i%5==0){
            cout<<i<<endl;
        }
    }

    return 0;
}


//4. Escriba un c칩digo que solicite ingresar dos n칰meros 洧논 y 洧녽, tal que 洧논 < 洧녽. Muestre todos los n칰meros primos que se encuentren entre el rango de valores, de no encontrarse, mostrar el primo m치s cercano a 洧논 o 洧녽.

#include <iostream>

using namespace std;

int main(){
    int x, y, c, num=1;

    cout<<"Ingrese 2 n칰meros para indicar los primos que se encuentren entre el rango de valores dados."<<endl;
    cout<<"Ingrese el primer n칰mero: ";
    cin>>x;
    cout<<"Ingrese el segundo n칰mero: ";
    cin>>y;

    for(int i=x+1; i<y; i++){
        int c=0;
        for(int j=1; j<=i; j++){
            if(i%j==0){
                c++;
            }
        }

        if(c==2){
            cout<<i<<endl;
            c++;
        }
    }

    while(c==0){
        if(x*1==x){
            int c=0;
            int x2=x+num;
            for(int i=1; i<=x2; i++){
                if(x2%i==0){
                    c++;
                }
            }

            if(c==2){
                cout<<"El primo m치s cercano es al primer n칰mero ingresado y es: "<<x2;
                break;
            }
        }

        if(y*1==y){
            int c=0;
            int y2=y+num;
            for(int i=1; i<=y2; i++){
                if(y2%i==0){
                    c++;
                }
            }

            if(c==2){
                cout<<"El primo m치s cercano es al segundo n칰mero ingresado y es: "<<y2;
                break;
            }
        }

        num++;
    }

    return 0;
}


//5. Elabore un programa que lea n n칰meros y determine cu치l es el mayor, el menor y la media de los n칰meros le칤dos.

#include <iostream>
#include <iomanip>

using namespace std;

int main() {
    int cant(0), num(0), me(0), ma(0);
    float sum(0.0f);

    cout << "Ingrese la cantidad de n칰meros que desea: ";
    cin >> cant;

    for (int c(1); c<=cant; ++c){
        cout<<"N칰mero "<<c<<": ";
        cin>>num;
        if(c==1){
            me=num;
            ma=num;
        }
        else if (num<me){
            me=num;
        }
        else if (num>ma){
            ma=num;
        }
        sum+=num;
    }

    cout << "\n"
         <<"El menor n칰mero ingresado es: "<<me<<endl
         <<"El mayor n칰mero ingresado es: "<<ma<<endl
         <<fixed<<setprecision(2)
         <<"La media de los n칰meros ingresados es: "<<sum/cant;

    return 0;
}


//6. Elabore un programa que calcule la serie de Fibonacci. La serie de Fibonacci es la sucesi칩n de n칰meros: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ... Cada n칰mero se calcula sumando los dos anteriores a 칠l.

#include <iostream>
#include <cmath>

using namespace std;

int main(){
    int n, fib1, fib2, i;
    do{
         cout<<"Introduce la cantidad de n칰mero Fibonacci que desea visualizar (mayor a 1): ";
         cin>>n;
    }

    while(n<=1);
    cout<<endl;
    cout<<"Los "<<n<<" primeros n칰meros de la serie de Fibonacci son: " << endl;
    fib1=1;
    fib2=1;
    cout<<fib1<<" ";

    for(i=2; i<=n; i++){
        cout<<fib2<<" ";
        fib2=fib1+fib2;
        fib1=fib2-fib1;
    }

    cout<<endl<<endl;

    return 0;
}


//7. Calcula el promedio de 3 notas para n estudiantes.

#include <iostream>
#include <stdlib.h>

using namespace std;

int main(){
    int n, g1, g2, g3;

    cout<<"Ingrese la cantidad de estudiantes a calificar: "<<endl;
    cin>>n;

    for(int i=1; i<=n; i++){
        cout<<"Notas del estudiante "<<i<<": "<<endl;
        cin>>g1>>g2>>g3;
        cout<<"El promedio de notas del estudiante "<<i<<" es: "<<(g1+g2+g3)/3<<endl;
    }

    cout<<endl;

    return 0;
}


//8. Escribir un programa que genere la tabla de multiplicar de un n칰mero introducido por el teclado.

#include <iostream>
#include <stdlib.h>

using namespace std;

int main(){
    int n;
    cout<<"Ingrese un n칰mero para generar su tabla de multiplicar: "<<endl;
    cin>>n;

    for(int i=1; i<=12; i++){
        cout<<n<<" * "<<i<<" = "<<n*i<<endl;
    }

    return 0;
}


//9. Escribir un programa que pida al usuario un n칰mero entero y muestre por pantalla un tri치ngulo rect치ngulo como el de m치s abajo, de altura el n칰mero introducido.
//*
//**
//***
//****
//*****

#include <iostream>

using namespace std;

int main(){
    int n, v, i;
    cout<<"Indicar la cantidad de filas para el tri치ngulo rect치ngulo: "<<endl;
    cin>>v;
    cout<<endl;

    for(i=1; i<=v; i++){
        for(n=1; i>=n; n++)
        cout<<"*";
        cout<<"\n";
    }

    return 0;
}


//10. Escribir un programa que pida al usuario una palabra y luego muestre por pantalla una a una las letras de la palabra introducida empezando por la 칰ltima.

#include <iostream>

using namespace std;

int main(){
    string word;

    cout<<"Ingrese una palabra y se mostrar치 cada letra empezando por la 칰ltima: "<<endl;
    cin>>word;

    for(int i=word.size()-1; i>=0; i--){
        if(i==word.size()-1)
            cout<<word[i];
        else
            cout<<"\t"<<word[i];
    }

    return 0;
}
